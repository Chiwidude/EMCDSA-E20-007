demo()
sd(c(5,8,12))
which.min(c(4,1,6))
sin (pi)
substr("California",5,10) # Extracting substring
substr("California",5,100) # Extracting substring
substr("California",100,100) # Extracting substring
substr("California",100,10) # Extracting substring
rep ("Yes I Can !",3000000000000000000000000)
rep ("Yes I Can !",30000000000)
rep ("Yes I Can !",3000000000)
rep ("Yes I Can !",3000000000)
rep ("Yes I Can !",300000000)
sqrt(-64)
help.start()
help(package)
??package
?package
??package
help.search("old.packages")
help.search("activity")
help(package=base) # List tasks in package "base"
wd()
cwd()
getwd()
sum(1, 4, 5 )
sum(1, 4, -5 )
sum(1, -4, -5 )
rep ("Yes I Can !",3)
substr("California",5,10)
T=15
T
TRUE=15
TRE=15
T
T
rem(T)
delete(T)
dem(T)
rm(T)
T
TRUE
TRUE
T
data()
rep ("Yes I Can !",3000000000)
??qplot
sessionInfo()
ls()
x <- rnorm(1e6)
x
y <- sum(x)
y
s <- 0
for(1 in 1:1e6)s <- s+rnorm(1)
s <- 0
for(i in 1:1e6)s <- s+rnorm(1)
s
y
x
fruit <- c ( "apple", "orange", "peach" )
fruit[-2]
amount <- 20 * 2
amount
measures <- data.frame(height=c(160,170,180), weight=c(65,80,85) )
cor( measures$height, measures$weight)
fruit <- c ( "apple", "orange", "peach" )
length(fruit[1])
m <- matrix( c(1,2,3,4,5,6,7,8), nrow=2, ncol=4)
print (m[1,3])
TRUE+TRUE+FALSE+TRUE
!T
!F
number_vector = c(0, 0, 1, 5, 299)
as.logical(number_vector)
rm(list=ls())
updateR()
install.packages("installr")
q()
q()
version
source('~/GitHub/RWD/EMCDSA-E20-007/Review-of-Basic-Data-Analytic-Methods-Using-R/Introduction-to-R/Introduction to R.R')
source('~/GitHub/RWD/EMCDSA-E20-007/Review-of-Basic-Data-Analytic-Methods-Using-R/Introduction-to-R/Introduction to R.R')
a <- vector(length = 3) #creates a logical vector of length 3
a #returns FALSE FALSE FALSE
a[2] <- 3.1
a
qurarterly_sales <- array(0,dim = c(3,4,2))
qurarterly_sales <- array(0,dim = c(3,4,2))
quarterly_sales <- array(0,dim = c(3,4,2))
quarterly_sales[2,1,1] <- 158000
quarterly_sales
quarterly_sales <- array(0,dim = c(3,4,2))
quarterly_sales[2,1,1] <- 158000
quarterly_sales
, , 1
quarterly_sales[, , 1]
quarterly_sales
quarterly_sales[, , 1]
quarterly_sales[, , 2]
source('~/GitHub/RWD/EMCDSA-E20-007/Review-of-Basic-Data-Analytic-Methods-Using-R/Introduction-to-R/Introduction to R.R')
a <- 1:20
dim(a) <- c(4,5)
a
dim(a) <- 4:5 # assign dimentions as 4 rows and 5 columns
a
dim(a) <- c(4,5) # assign dimentions as 4 rows and 5 columns
a
a <- array(1:20,dim = c(4,5))
a
a <- array(0,dim = 4:5)
a
i <- array(c(1,2,1,2),dim = c(2,2))
i
a[i]
a <- array(1:20,dim = c(4,5))
a[i]
a
a[i]
i
a
b
b <- a
a
b
a*b
a+b
b-a
c<-a*b
c
a
b
b <- t(a)
b
a
diag(a)
eigen(a)
a <- array(1:20, dim = c(4,5))
a
a <- array(1:20, dim = c(4,4))
a
a <- array(1:20, dim = c(4,4))
a
eigen(a)
source('~/GitHub/RWD/EMCDSA-E20-007/Review-of-Basic-Data-Analytic-Methods-Using-R/Introduction-to-R/Introduction to R.R')
source('~/GitHub/RWD/EMCDSA-E20-007/Review-of-Basic-Data-Analytic-Methods-Using-R/Introduction-to-R/Introduction to R.R')
sales_matrix <- matrix(0, nrow = 3,ncol = 4)
sales_matrix
a <- array(0,dim = 4:5)
a
sales_matrix <- matrix(1:10, nrow = 3,ncol = 4)
sales_matrix <- matrix(1:12, nrow = 3,ncol = 4)
sales_matrix
library(matrixcalc)
library(matrixcalc)
install.packages("matrixcalc"")
install.packages("matrixcalc")
install.packages("matrixcalc")
install.packages("matrixcalc")
library(matrixcalc)
install.packages("matrixcalc")
library(matrixcalc)
M <- matrix(c(1,3,3,5,0,4,3,3,3), nrow = 3, ncol = 3) #build a 3X3 matrix
M * matrix.inverse(M)
M %*% matrix.inverse(M)
M
matrix.inverse(M)
M <- matrix(c(1,3,3,5,0,4,3,3,3), nrow = 3, ncol = 3) #build a 3X3 matrix
M
matrix.inverse(M)
M %*% matrix.inverse(M)
M %*% matrix.inverse(M)
source('~/GitHub/RWD/EMCDSA-E20-007/Review-of-Basic-Data-Analytic-Methods-Using-R/Introduction-to-R/Introduction to R.R')
install.packages("matrixcalc")
r[1:10]
k<-r[1:10]
k<-1:10
k
is.data.frame(sales)
is.vector(sales$cust_id)
is.vector(sales$sales_total)
is.vector(sales$gender)
is.factor(sales$gender)
str(sales)
sales <- read.csv("yearly_sales.csv")
str(sales)
sales[,4]
sales$gender
sales[4,]
sales[3,]
sales[1:2,]
sales[,c(1,3,4)]
sales[,c(1,3,4)]
sales[,c("cust_id","sales_total")]
sales[sales$gender="F"]
sales[sales$gender="F",]
sales[sales$Gender="F",]
sales[sales$gender="F",]
sales[sales$gender="F", ]
sales[sales$gender=="F",]
sales[,sales$gender=="F"]
class(sales)
typeof(sales)
source('~/GitHub/RWD/EMCDSA-E20-007/Review-of-Basic-Data-Analytic-Methods-Using-R/Introduction-to-R/Introduction to R.R')
housing <- list("own","rent")
class(sales$gender)
is.ordered(sales$gender)
head(sales$gender)
install.packages("ggplot2"")
install.packages("ggplot2")
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(ggplot2)
library("ggplot2", lib.loc="~/R/win-library/3.2")
install.packages("ggplot2")
library("ggplot2", lib.loc="~/R/win-library/3.2")
detach("package:ggplot2", unload=TRUE)
library("ggplot2", lib.loc="~/R/win-library/3.2")
detach("package:ggplot2", unload=TRUE)
library("ggplot2")
install.packages("ggplot2", repos=c("http://rstudio.org/_packages", "http://cran.rstudio.com"))
library(ggplot2)
install.packages("ggplot2", repos="http://cran.rstudio.com/", dependencies=TRUE)
library(ggplot2)
install.packages("stringi")
library(ggplot2)
library(ggplot2)
data("diamonds")
data(diamonds)
str(diamonds)
head(diamonds$cu)
View(diamonds)
head(diamonds$col)
View(diamonds)
View(diamonds)
str(diamonds)
head(diamonds$cut)
sales_group <- vector(mode = "character", length = length(sales$sales_total))
sales_group[sales$sales_total>=100 & sales$sales_total<500] <- "smalll"
sales_group[sales$sales_total>=100 & sales$ales_total<500] <- "medium"
sales_group[sales$sales_total>=500] <- "big"
sales_group[sales$sales_total<100] <- "smalll"
sales_group[sales$sales_total>=100 & sales$ales_total<500] <- "medium"
sales_group[sales$sales_total>=500] <- "big"
spender <- factor(sales_group, levels = c("small","medium","big"), ordered = TRUE)
sales <- cbind(sales,spender)
str(sales$spender)
head(sales$spender)
spender <- factor(sales_group, levels = c("small","medium","big"), ordered = TRUE,na.omit())
spender <- factor(sales_group, levels = c("small","medium","big"), ordered = TRUE,na.omit(sales_group))
spender <- factor(sales_group, levels = c("small","medium","big"), ordered = TRUE,na.rm =TRUE)
spender <- factor(sales_group, levels = c("small","medium","big"), ordered = TRUE)
head(sales$spender)
spender <- na.omit(spender)
sales <- cbind(sales,spender)
sales <- na.omit(sales)
sales <- cbind(sales,spender)
str(sales$spender)
head(sales$spender)
source('~/GitHub/RWD/EMCDSA-E20-007/Review-of-Basic-Data-Analytic-Methods-Using-R/Introduction-to-R/Introduction to R.R')
install.packages("ggplot2", repos = "http://cran.rstudio.com/",
install.packages("stringi")
class(sales$gender) #returns Factor
is.ordered(sales$gender) #returns False
class(sales$gender) #returns Factor
head(sales$gender) #displays first six values and the levels
